[changelog]
header = """
# Changelog

All notable changes to this project will be documented in this file.

The format is based on [Keep a Changelog](https://keepachangelog.com/en/1.0.0/),
and this project adheres to [Semantic Versioning](https://semver.org/spec/v2.0.0.html).

This changelog is automatically generated using [git-cliff](https://github.com/orhun/git-cliff).
"""
body = """
{% if version %}\
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else %}\
    ## [Unreleased]
{% endif %}\
{% for group, commits in commits | group_by(attribute="group") %}
    ### {{ group | striptags | trim | upper_first }}
    {% for commit in commits %}
        - {% if commit.scope %}**{{ commit.scope }}:** {% endif %}{{ commit.message | upper_first }}\
          {% if commit.remote.username %} by @{{ commit.remote.username }}{%- endif %}\
          {% if commit.remote.pr_number %} in #{{ commit.remote.pr_number }}{%- endif %} \
          ([{{ commit.id | truncate(length=7, end="") }}](https://github.com/hugoduncan/mcp-tasks/commit/{{ commit.id }}))
    {% endfor %}
{% endfor %}\n
"""
footer = """
<!-- generated by git-cliff -->
"""
trim = true
postprocessors = []

[git]
conventional_commits = true
filter_unconventional = false
split_commits = false
commit_preprocessors = []
commit_parsers = [
  { message = "^feat", group = "Features" },
  { message = "^fix", group = "Bug Fixes" },
  { message = "^perf", group = "Performance" },
  { message = "^refactor", group = "Refactoring" },
  { message = "^docs", group = "Documentation" },
  { message = "^test", group = "Testing" },
  { message = "^build", group = "Build System" },
  { message = "^ci", group = "CI/CD" },
  { message = "^chore", group = "Chores" },
  { message = "^style", group = "Code Style" },
  { body = ".*security", group = "Security" },
  { message = "^revert", group = "Reverts" },
]
protect_breaking_commits = false
filter_commits = false
tag_pattern = "v[0-9].*"
skip_tags = ""
ignore_tags = ""
topo_order = false
sort_commits = "oldest"
commit_filters = [
  # Exclude commits with specific scopes
  { field = "scope", pattern = "(release|changelog)" },
  # Exclude commits with skip markers in message
  { field = "message", pattern = ".*\\[(skip changelog|changelog skip)\\].*" },
  # Exclude merge commits from local-integration-branch
  { field = "message", pattern = "^Merge branch 'local-integration-branch'.*" },
]

[remote.github]
owner = "hugoduncan"
repo = "mcp-tasks"
