{
    "includeCoAuthoredBy": false,
    "permissions": {
        "allow": [
            "Bash(chmod:*)",
            "Bash(clj:*)",
            "Bash(clojure:*)",
            "Bash(cp:*)",
            "Bash(curl:*)",
            "Bash(else)",
            "Bash(fi)",
            "Bash(gh pr create:*)",
            "Bash(gh pr view:*)",
            "Bash(gh run list:*)",
            "Bash(gh run view:*)",
            "Bash(git -C .mcp-tasks:*)",
            "Bash(git add:*)",
            "Bash(git checkout:*)",
            "Bash(git commit:*)",
            "Bash(git fetch:*)",
            "Bash(git log:*)",
            "Bash(git merge -ff-only:*)",
            "Bash(git merge-base:*)",
            "Bash(git pull:*)",
            "Bash(git push:*)",
            "Bash(git rebase:*)",
            "Bash(git rev-parse:*)",
            "Bash(git rm:*)",
            "Bash(git stash:*)",
            "Bash(grep:*)",
            "Bash(if [ -n \"$OPENAI_API_KEY\" ])",
            "Bash(mkdir:*)",
            "Bash(mv:*)",
            "Bash(rm:*)",
            "Bash(then)",
            "WebFetch(domain:)",
            "WebSearch",
            "mcp__clj-kondo__lint_clojure",
            "mcp__clojure-mcp__LS",
            "mcp__clojure-mcp__architect",
            "mcp__clojure-mcp__bash",
            "mcp__clojure-mcp__clojure_edit",
            "mcp__clojure-mcp__clojure_edit_replace_sexp",
            "mcp__clojure-mcp__clojure_eval",
            "mcp__clojure-mcp__clojure_inspect_project",
            "mcp__clojure-mcp__file_edit",
            "mcp__clojure-mcp__file_write",
            "mcp__clojure-mcp__glob_files",
            "mcp__clojure-mcp__grep",
            "mcp__clojure-mcp__read_file",
            "mcp__clojure-mcp__scratch_pad",
            "mcp__clojure-mcp__think",
            "mcp__mcp-tasks__add-task",
            "mcp__mcp-tasks__clj-eval",
            "mcp__mcp-tasks__complete-story",
            "mcp__mcp-tasks__complete-story-task",
            "mcp__mcp-tasks__complete-task",
            "mcp__mcp-tasks__next-task",
            "mcp__mcp-tasks__select-tasks",
            "mcp__mcp-tasks__work-on"
        ],
        "deny": [],
        "ask": []
    }
}
