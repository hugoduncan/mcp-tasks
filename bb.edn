{:paths ["src" "resources"]

 :deps {org.hugpduncan/mcp-clj-server
        {:git/url   "https://github.com/hugoduncan/mcp-clj"
         :git/sha   "50a2d1ab100c27b76e80b5674d6c2ee567b079b6"
         :deps/root "projects/server"}
        metosin/malli     {:mvn/version "0.16.4"}
        cheshire/cheshire {:mvn/version "5.13.0"}
        babashka/fs       {:mvn/version "0.5.22"}
        org.babashka/cli  {:mvn/version "0.8.61"}}

 :tasks
 {:requires ([mcp-tasks.cli :as cli])

  cli {:doc  "Run mcp-tasks CLI"
       :task (apply cli/-main *command-line-args*)}

  list {:doc  "List tasks"
        :task (apply cli/-main (cons "list" *command-line-args*))}

  add {:doc  "Add a task"
       :task (apply cli/-main (cons "add" *command-line-args*))}

  show {:doc  "Show task details"
        :task (apply cli/-main (cons "show" *command-line-args*))}

  complete {:doc  "Complete a task"
            :task (apply cli/-main (cons "complete" *command-line-args*))}

  update {:doc  "Update a task"
          :task (apply cli/-main (cons "update" *command-line-args*))}

  delete {:doc  "Delete a task"
          :task (apply cli/-main (cons "delete" *command-line-args*))}

  test {:doc  "Cannot run tests with babashka"
        :task (do
                (binding [*out* *err*]
                  (println "Can not run tests with babashka"))
                (System/exit 1))}

  build-uberscript
  {:doc  "Build standalone babashka executable (output: mcp-tasks)"
   :task (do
           (println "Building mcp-tasks uberscript...")
           (shell "rm -f mcp-tasks-temp")
           (shell {:env {"USE_MALLI" nil "PATH" (System/getenv "PATH")}}
                  "bb uberscript mcp-tasks-temp script/uberscript-main.clj")
           (println "Adding shebang and making executable...")
           (spit "mcp-tasks" (str "#!/usr/bin/env bb\n" (slurp "mcp-tasks-temp")))
           (shell "rm mcp-tasks-temp")
           (shell "chmod +x mcp-tasks")
           (println "✓ Created executable: ./mcp-tasks"))}

  copy-uberscript-to-plugin
  {:doc  "Copy built uberscript to CLI plugin directory"
   :task (let [source "mcp-tasks"
               target "plugins/mcp-tasks-cli/bin/mcp-tasks"]
           (if (.exists (clojure.java.io/file source))
             (do
               (println "Copying mcp-tasks uberscript to plugin...")
               (shell "mkdir -p plugins/mcp-tasks-cli/bin")
               (shell (str "cp " source " " target))
               (println (str "✓ Copied to " target)))
             (do
               (println (str "Error: Source binary not found: " source))
               (println "Run 'bb build-uberscript' first to create the binary")
               (System/exit 1))))}}}
